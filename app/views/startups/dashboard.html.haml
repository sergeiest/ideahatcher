.dashboard-view
  = render :partial => 'dashboard_nav'

  .dashboard-company
    .pitch-box
      %h2.main-name#main-name{:style => "font-weight: lighter;"}
        %span= @startup.name
        = image_tag '/images/pen.png', :class => "edit-pen", :onclick => "editName(this)"
        = form_tag({:action => 'update_name', :controller => "campaigns"},
                                   :remote => true, :hidden => true) do
          = text_field_tag :name, @startup.name, :class => "name-field"
          = hidden_field_tag :id, @startup.id
          = submit_tag "SUBMIT", :class => "custom-button", :style => "float:right"
      - if @startup.avatar?
        = image_tag @startup.avatar.url(:large), :class => "main-logo"
      - else
        = image_tag '/images/no_logo.png', :class => "main-logo"
      = image_tag '/images/pen.png', :class => "edit-pen-large", :onclick => "$('#uploadPhoto').modal(open)"

      .clear-both
      #main-description.description-box
        %h5{:style => "font-weight:lighter"}
          About
          = image_tag '/images/pen.png', :class => "edit-pen",
                :onclick => "editDescription(this, this.parentNode.parentNode)", :style => "float:right"
        %p
          =@startup.pitch.firstletters(500)
        = form_tag({:action => 'update_description', :controller => "campaigns"},
                               :remote => true, :hidden => true) do
          = hidden_field_tag :id, @startup.id
          = text_area_tag :pitch, @startup.pitch
          %br
          = submit_tag "SUBMIT", :class => "custom-button", :style => "float:right"
          .clear-both

    - @company_descriptions.each do |description|
      = render :partial => 'dashboard_description', :locals => {:description => description}

    -if @startup.pictures.length > 0
      .description-box
        %h5{:style => "font-weight:lighter"} Prototypes
        #dash-carousel.carousel.slide{"data-interval" => "false"}
          .carousel-inner
            = render :partial => 'picture', :collection => @startup.pictures, :as => :picture
          %a.carousel-control.left{"data-slide" => "prev", href: "#dash-carousel"} ‹
          %a.carousel-control.right{"data-slide" => "next", href: "#dash-carousel"} ›
        %button.custom-button#add-pictures-button{:onclick => "$('#uploadPicture').modal(open)"} Add pictures 
        .proto-link-dash-div
          -if not @startup.prototype_link.nil? and not @startup.prototype_link.blank?
            = link_to @startup.prototype_link, ("http://" + @startup.prototype_link), :class => "startup-prototype-link"
            = image_tag '/images/pen.png', :class => "edit-pen add-proto-link", :style => "float:right;width:30px"
          -else
            .startup-prototype-link 
              No link specified
            = image_tag '/images/pen.png', :class => "edit-pen add-proto-link", :style => "float:top;width:30px"

    -else 
      .description-box
        %h5{:style => "font-weight:lighter"} Prototypes
        %p Upload pictures of your mockups, prototypes and product to collect the feedback about them
        %button.custom-button#add-pictures-button{:onclick => "$('#uploadPicture').modal(open)"} Add pictures
        .proto-link-dash-div
          -if not @startup.prototype_link.nil? and not @startup.prototype_link.blank?
            = link_to @startup.prototype_link, ("http://" + @startup.prototype_link), :class => "startup-prototype-link"
            = image_tag '/images/pen.png', :class => "edit-pen add-proto-link", :style => "float:right;width:30px"
          -else
            .startup-prototype-link 
              No link specified
            = image_tag '/images/pen.png', :class => "edit-pen add-proto-link", :style => "float:right;width:30px"


  .dashboard-info
    %h5{:style => "font-weight:lighter"}
      The Team
      =link_to :action => "team", :id => @startup.id do
        = image_tag '/images/pen.png', :class => "edit-pen", :style => "float:right;width:20px"
    - @startup_owners.each do |person|
      = link_to({:controller => "investors", :action => "follower_info", :id => person.id,
                :action_type => 1}, :remote => true) do
        .person-info
          - if person.avatar?
            = image_tag person.avatar.url(:square)
          - else
            = image_tag "/images/no_profile_picture_" + (person.id % 4 + 1).to_s + ".png"
          %p
            %span{:style => "font-weight:bold"}= person.firstname + " " + person.lastname
            %br
            Founder
          .clear-both

    %h5{:style => "font-weight:lighter"}
      Your Share Settings
      =link_to :action => "circles", :id => @startup.id do
        = image_tag '/images/pen.png', :class => "edit-pen", :style => "float:right;width:20px"
      %p{:style => "font-weight:bold;margin-top:20px"}
        = image_tag '/images/sharesettings_choose.png', :style => "width:30px"
        INVITE ONLY
      %p{:style => "font-weight:bold"}
        = image_tag '/images/sharesettings_random.png', :style => "width:30px"
        RANDOM USERS TEST
      %p{:style => "font-weight:bold"}
        = image_tag '/images/sharesettings_public.png', :style => "width:30px"
        PUBLIC
    %h5{:style => "font-weight:lighter"}
      Your Hatchers
    - @startup_followers.sample(@startup_followers.length).each do |person|
      = link_to({:controller => "investors", :action => "follower_info", :id => person.id,
                      :action_type => 1}, :remote => true) do
        - if person.avatar?
          = image_tag person.avatar.url(:square), :class => "hatchers"
        - else
          = image_tag "/images/no_profile_picture_" + (person.id % 4 + 1).to_s + ".png", :class => "hatchers"


  .clear-both


#uploadPhoto.modal.hide.fade{:tabindex => "-1", :role => "dialog", :'aria-labelledby' => "myModalLabel", :'aria-hidden' => "true"}
  .modal-header
    %button.close{ :type => "button", :'data-dismiss' => "modal", :'aria-hidden' => "true"} ×
    %h3{ :id => "myModalLabel"} Upload photo or logo
  = form_tag({:controller => "campaigns", :action => "upload_logo"}, :multipart => true) do
    .modal-body
      %p Upload photo or graphic that best represents your idea. Aspect ratio of the picture should be 2:1.
      = file_field_tag :avatar, :onchange => "checkFile(this)"
      = hidden_field_tag :back_action, "dashboard"
      = hidden_field_tag :id, @startup.id
      %p#photo_error{ :style => "color:red"}
    .modal-footer
      %button{:class => "btn", :'data-dismiss' => "modal", :'aria-hidden' => "true"} Close
      %button{:class => "btn btn-primary", :id => "photo_upload", :disabled => "true"} Upload photo


#uploadPicture.modal.hide.fade{:tabindex => "-1", :role => "dialog", :'aria-labelledby' => "myModalLabel", :'aria-hidden' => "true"}
  .modal-header
    %button.close{ :type => "button", :'data-dismiss' => "modal", :'aria-hidden' => "true"} ×
    %h3{ :id => "myModalLabel"} Upload pictures of your prototype
  = form_tag({:controller => "pictures", :action => "upload_picture"}, :multipart => true) do
    .modal-body
      %p
        Upload photo or screenshots of your mockups, prototypes or products. Show your progress and collect the feedback.
        %br
        Preferable aspect ratio of the picture is 2:1.
      = file_field_tag :avatar, :onchange => "checkFile(this)"
      %hr
      %p
        Title of the picture (e.g. 'mockup of the idea profile page'):
        %br
        = text_field_tag :pic_title
      %p
        Description (e.g. 'on this page users are able to provide feedback to entrepreneurs by voting and participating in discussion'):
        %br
        = text_area_tag :pic_description
      = hidden_field_tag :startup_id, @startup.id
      %p#photo_error{ :style => "color:red"}
    .modal-footer
      %button{:class => "btn", :'data-dismiss' => "modal", :'aria-hidden' => "true"} Close
      =submit_tag "Upload photo", :class => "btn btn-primary", :id => "photo_upload"

#editPicture.modal.hide.fade{:tabindex => "-1", :role => "dialog", :'aria-labelledby' => "myModalLabel", :'aria-hidden' => "true"}
  .modal-header
    %button.close{ :type => "button", :'data-dismiss' => "modal", :'aria-hidden' => "true"} ×
    %h3{ :id => "myModalLabel"} Edit picture
  = form_tag({:controller => "pictures", :action => "edit_picture"}, :multipart => true) do
    .modal-body
      %p
        Upload a new photo or screenshots of your mockups, prototypes or products. Show your progress and collect the feedback.
        %br
        Preferable aspect ratio of the picture is 2:1.
      = file_field_tag :avatar, :onchange => "checkFile(this)"
      %hr
      %p
        Title of the picture (e.g. 'mockup of the idea profile page'):
        %br
        = text_field_tag :pic_title
      %p
        Description (e.g. 'on this page users are able to provide feedback to entrepreneurs by voting and participating in discussion'):
        %br
        = text_area_tag :pic_description
      = hidden_field_tag :startup_id, @startup.id
      = hidden_field_tag :picture_status
      %p#photo_error{ :style => "color:red"}
    .modal-footer
      %button{:class => "btn", :'data-dismiss' => "modal", :'aria-hidden' => "true"} Close
      =submit_tag "Upload photo", :class => "btn btn-primary", :id => "photo_upload"

#deletePicture.modal.hide.fade{:tabindex => "-1", :role => "dialog", :'aria-labelledby' => "myModalLabel", :'aria-hidden' => "true"}
  .modal-header
    %button.close{ :type => "button", :'data-dismiss' => "modal", :'aria-hidden' => "true"} ×
    %h3{ :id => "myModalLabel"} Delete picture
  = form_tag({:controller => "pictures", :action => "delete_picture"}, :multipart => true) do
    .modal-body
      %p 
        Are you sure you want to delete this picture?
        = hidden_field_tag :startup_id, @startup.id
        = hidden_field_tag :picture_status
      %p
        =submit_tag "Yes", :class => "btn btn-primary", :id => "del_picture_button"
        %button{:class => "btn", :'data-dismiss' => "modal", :'aria-hidden' => "true"} No

#uploadLink.modal.hide.fade{:tabindex => "-1", :role => "dialog", :'aria-labelledby' => "myModalLabel", :'aria-hidden' => "true"}
  .modal-header
    %button.close{ :type => "button", :'data-dismiss' => "modal", :'aria-hidden' => "true"} ×
    %h3{ :id => "myModalLabel"} Upload/Change your prototype link
  = form_tag :action => 'upload_link' do
    .modal-body
      %p
        Url: (in 'www.example.com' form)
        %br
      -if not @startup.prototype_link.nil? and not @startup.prototype_link.blank?
        =text_field_tag :link_url, @startup.prototype_link
      -else
        =text_field_tag :link_url
      =hidden_field_tag :id, @startup.id
      %p#photo_error{ :style => "color:red"}
    .modal-footer
      %button{:class => "btn", :'data-dismiss' => "modal", :'aria-hidden' => "true"} Close
      =submit_tag "Upload link", :class => "btn btn-primary", :id => "link_upload"


#show-replies-form
  = form_tag({:controller => "ideas", :action => "create"}, :remote => true, :hidden => true) do
    %hr
    = hidden_field :idea, :title
    = hidden_field :idea, :is_protected
    = hidden_field :idea, :idea_id
    = hidden_field :idea, :startup_id
    = hidden_field :idea, :companydescription_id
    = text_area :idea, :content, :style => "width:98%;height:100px", :onclick => "clearInput(this)"
    = submit_tag 'SUBMIT', :class => "startup-button-yellow"

%script{ :type => "text/javascript", :src => "http://www.google.com/jsapi"}

:javascript
  google.load('visualization', '1', {packages: ['corechart']});

  function hideHatching(elementNode,linkNode){
    if (elementNode.hidden == true){
      elementNode.hidden = false;
      linkNode.innerHTML = linkNode.innerHTML.replace("Help hatch it!", "Hide dashboard...");
      animationCustom(elementNode,"height", 0, elementNode.offsetHeight, 0);
    } else {
      linkNode.innerHTML = linkNode.innerHTML.replace("Hide dashboard...", "Help hatch it!");
      animationCustom(elementNode,"height", elementNode.offsetHeight, 0, 1);
    }
  }
  function editName(elementNode){
      elementNode.parentNode.children[0].hidden = true;
      elementNode.parentNode.children[1].hidden = true;
      elementNode.parentNode.children[2].hidden = false;
  }
  function editDescription(buttonNode, elementNode) {
      buttonNode.hidden = true;
      elementNode.children[1].hidden = true;
      elementNode.children[2].hidden = false;
  }

  function editStep1(elementNode) {
      elementNode.getElementsByClassName("step1")[0].hidden = false;
      elementNode.getElementsByClassName("step2")[0].hidden = true;
      elementNode.getElementsByClassName("edit-description")[0].hidden = false;
  }

  function editStep2(elementNode) {
      var formNode = elementNode.getElementsByTagName("form")[0];
      var pNew = elementNode.getElementsByClassName('p_new')[0];

      if (elementNode.parentNode.getElementsByTagName("input")[0].checked == true){
          formNode.getElementsByTagName('textarea')[0].value = "";
          formNode.getElementsByTagName('input')[3].value = "1";
      } else {
          formNode.getElementsByTagName('textarea')[0].value = pNew.innerText;
          formNode.getElementsByTagName('input')[3].value = "0";
      }
      elementNode.getElementsByClassName("step1")[0].hidden = true;
      elementNode.getElementsByClassName("step2")[0].hidden = false;
      elementNode.getElementsByClassName("edit-description")[0].hidden = false;
  }

  function editCancel(elementNode) {
      elementNode.parentNode.parentNode.hidden = true;
      elementNode.parentNode.hidden = true;
  }

  function checkFile(elementNode){
    var fileInput = elementNode;
    var fileName = fileInput.value;
    var ext = fileName.substring(fileName.lastIndexOf('.') + 1);
    if(ext == "gif" || ext == "GIF" || ext == "JPEG" || ext == "jpeg" || ext == "jpg" || ext == "JPG" || ext == "png" || ext == "PNG") {
      document.getElementById('photo_error').innerText = "";
      document.getElementById('photo_upload').disabled = false;
    } else {
      document.getElementById('photo_error').innerText = "Upload Gif or Jpg images only";
      document.getElementById('photo_upload').disabled = true;
      fup.focus();
    }
  }


  function addPerson (elementNode, id) {
      var formElement = document.getElementById("add_founder");
      var notes = formElement.children;
      for (var i = 0; i < notes.length; i++) {
          if (notes[i].getAttribute('name') == 'founder_id') {
              notes[i].value = id;
          }
      }
      submitForm(formElement);
      $('#info_modal').modal('hide');
  }

  function removePerson (elementNode, id) {
      var formElement = document.getElementById("remove_founder");
      var notes = formElement.children;
      for (var i = 0; i < notes.length; i++) {
          if (notes[i].getAttribute('name') == 'founder_id') {
              notes[i].value = id;
          }
      }
      submitForm(formElement);
      $('#info_modal').modal('hide');
  }

  function openThis(description_id){
    //notes = document.getElementsByClassName("collapse");
    //for (var i = 0; i < notes.length; i++) {
    //  $('#' + notes[i].id).collapse('hide');
    //}
    $('#ideahatching_' + description_id).collapse('toggle');
  }


